name: Release Pipeline

on:
  push:
    branches: [ release ]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., 1.2.3)'
        required: true
        type: string

jobs:
  validate-release:
    name: Validate Release
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        cache-dependency-path: app/package-lock.json

    - name: Install dependencies
      run: |
        cd app
        npm ci

    - name: Run full test suite
      run: |
        cd app
        npm run precommit

    - name: Run integration tests
      run: |
        cd app
        npm run test:integration

    - name: Run E2E tests
      run: |
        cd app
        npm run test:e2e

    - name: Build package
      run: |
        cd app
        npm run build

    - name: Validate package contents
      run: |
        cd app
        npm pack --dry-run

  publish-npm:
    name: Publish to NPM
    runs-on: ubuntu-latest
    needs: validate-release
    if: github.event_name == 'push'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        cache-dependency-path: app/package-lock.json
        registry-url: 'https://registry.npmjs.org'

    - name: Install dependencies
      run: |
        cd app
        npm ci

    - name: Build package
      run: |
        cd app
        npm run build

    - name: Publish to NPM
      run: |
        cd app
        npm publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  create-github-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: publish-npm
    if: github.event_name == 'push'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Get package version
      id: package-version
      run: |
        cd app
        echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.package-version.outputs.version }}
        release_name: Scaffold Scripts v${{ steps.package-version.outputs.version }}
        draft: false
        prerelease: false
        body: |
          ## Scaffold Scripts v${{ steps.package-version.outputs.version }}
          
          ### Changes
          See the [commit history](https://github.com/${{ github.repository }}/commits/v${{ steps.package-version.outputs.version }}) for detailed changes.
          
          ### Installation
          ```bash
          npm install -g scaffold-scripts@${{ steps.package-version.outputs.version }}
          ```
          
          ### Documentation
          - [README](https://github.com/${{ github.repository }}#readme)
          - [Full Documentation](https://github.com/${{ github.repository }}/blob/main/README-full.md)

  notify-release:
    name: Notify Release
    runs-on: ubuntu-latest
    needs: create-github-release
    if: always() && github.event_name == 'push'

    steps:
    - name: Release Success Notification
      if: needs.create-github-release.result == 'success'
      run: |
        echo "✅ Release completed successfully!"
        echo "NPM: https://www.npmjs.com/package/scaffold-scripts"
        echo "GitHub: https://github.com/${{ github.repository }}/releases"

    - name: Release Failure Notification
      if: needs.create-github-release.result == 'failure'
      run: |
        echo "❌ Release failed!"
        echo "Check the workflow logs for details."
        exit 1